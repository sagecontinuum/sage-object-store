
apiVersion: v1
kind: Secret
metadata:
  name: object-store-secret
type: Opaque
stringData:
  s3Endpoint: "sage-minio"
  s3accessKeyID: "minio"
  s3secretAccessKey: "minio123"
  s3bucket: "sage"
  s3rootFolder: "node-data"

  tokenInfoUser: ""
  tokenInfoPassword: ""
  tokenInfoEndpoint: ""

  TESTING_NOAUTH: "1"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: object-store
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: object-store
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: object-store
  labels:
    service: object-store
spec:
  selector:
    k8s-app: object-store
  type: ClusterIP
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: object-store
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: object-store
  template:
    metadata:
      labels:
        k8s-app: object-store
    spec:
      containers:
      - name: object-store
        image: waggle/sage-object-store:latest
        envFrom:
        - secretRef:
            name: object-store-secret
        #env:
          # - name: s3Endpoint
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: s3Endpoint
          # - name: s3bucket
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: s3bucket
          # - name: s3rootFolder
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: s3rootFolder
          # - name: tokenInfoEndpoint
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: tokenInfoEndpoint
          # - name: TESTING_NOAUTH
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: TESTING_NOAUTH
          # - name: s3accessKeyID
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: s3accessKeyID
          # - name: s3secretAccessKey
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: s3secretAccessKey
          # - name: tokenInfoUser
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: tokenInfoUser
          # - name: tokenInfoPassword
          #   valueFrom:
          #     secretKeyRef:
          #       name: object-store-secret
          #       key: tokenInfoPassword

        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        imagePullPolicy: Always
      restartPolicy: Always